import javax.swing.*;
import java.util.ArrayList;


/**
 * Created by Joey C on 11/12/2015.
 * Version 0.0.0.1
 */

// if exit code = 0 project was manually exited
// if exit code = 1 project crashed


public class Client {
    public static void main(String arg[]) {
        ArrayList<VideoGame> catalog = new ArrayList<VideoGame>();
        int choice;
        choice = menu();

        VideoGame temp = new VideoGame("Black Ops 1","Activision",4,4);
        VideoGame temp1 = new VideoGame("Black Ops 2","Activision",5,4);
        VideoGame temp2 = new VideoGame("Black Ops 3","Activision",2,4);
        catalog.add(catalog.size(),temp);
        catalog.add(catalog.size(),temp1);
        catalog.add(catalog.size(),temp2);

        while(choice!=-1){
            //code

            if(choice==1) {
                printAll(catalog);
            }
            else if(choice==2) {
                inputNewGame(catalog);
            }
            else if(choice==3) {
                try {
                    JOptionPane.showMessageDialog(null,catalog.get(searchByTitle(catalog)));
                }
                catch(ArrayIndexOutOfBoundsException e){
                    JOptionPane.showMessageDialog(null,"Improper input");
                }
            }
            else if(choice==4){
                printAllGamesByPublisher(catalog);
            }
            else if(choice==5){
                printAllAboveRating(catalog);
            }

            else if(choice==6){
                sortAllGamesByRating(catalog);
            }
            else if(choice==7){
                int x = Integer.parseInt(JOptionPane.showInputDialog(" 1. Exit \n 2. Cancel"));
                if(x==1)
                System.exit(0);

                if (x==2)
                choice=menu();
            }


            choice=menu();
        }
    }

    private static void sortAllGamesByRating(ArrayList<VideoGame> c) {
        if (c.size()>1) // check if the number of orders is larger than 1
        {
            VideoGame temp;
            for (int x=0; x<c.size(); x++) // bubble sort outer loop
            {
                for (int i=0; i < c.size()-i; i++) {
                    if (c.get(i).getRating()-(c.get(i+1).getRating()) > 0)
                    {
                        temp = c.get(i);
                        c.set(i,c.get(i+1) );
                        c.set(i+1, temp);
                    }
                }
            }
        }
        JOptionPane.showMessageDialog(null,"ArrayList sorted");

    }

    private static void printAllAboveRating(ArrayList<VideoGame> catalog) {
        double s = Double.parseDouble(JOptionPane.showInputDialog("Input Rating number"));
        for (int i = 0;i<catalog.size();i++)
            if(catalog.get(i).getRating()>s)
                JOptionPane.showMessageDialog(null,catalog.get(i));
    }

    private static void printAllGamesByPublisher(ArrayList<VideoGame> catalog) {
        String s =JOptionPane.showInputDialog("Input Publisher name");
        for (int i = 0;i<catalog.size();i++)
            if (catalog.get(i).getPublisher().equalsIgnoreCase(s))
                JOptionPane.showMessageDialog(null,catalog.get(i));

    }

    private static int searchByTitle(ArrayList<VideoGame> catalog) {
        String s = JOptionPane.showInputDialog("Type in Title");
        for(int i=0;i<catalog.size();i++)
            if(catalog.get(i).getTitle().equalsIgnoreCase(s))
                return i;

        return -1;
    }

    private static void printAll(ArrayList<VideoGame> catalog) {
            JOptionPane.showMessageDialog(null,catalog.toString());
     }

    private static void inputNewGame(ArrayList<VideoGame> catalog) {

        String title = JOptionPane.showInputDialog("Enter game Title");
        String publisher = JOptionPane.showInputDialog("Enter game Publisher");
        try {
            int rating = Integer.parseInt(JOptionPane.showInputDialog("Enter game Rating"));
            int esbr = Integer.parseInt(JOptionPane.showInputDialog("Enter game esbr"));
            VideoGame temp = new VideoGame(title,publisher,rating,esbr);
            catalog.add(catalog.size(),temp);
        }
        catch (NumberFormatException e){
        JOptionPane.showMessageDialog(null,"Improper input");
        }
    }

    private static int menu() {
      try {
          String s = JOptionPane.showInputDialog("" + "1. Print entire catalog\n 2. Enter a new game into catalog\n" +
                  " 3. Search for game in catalog by title\n 4. Print all games by publisher\n 5. Print all games above rating\n " +
                  "6. Sort all games by rating \n 7.Quit\n\n\n Enter Choice:");
          return Integer.parseInt(s);
      }
      catch(NumberFormatException e){
            menu();
        }
        return -1;
    }
}
